generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model complaint {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status     String   @db.VarChar(255)
  created_by String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  user       user?    @relation(fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model lead {
  id                          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  status                      String   @db.VarChar(255)
  note                        String?  @db.VarChar(255)
  assigned_to                 String?  @db.Uuid
  created_by                  String?  @db.Uuid
  created_at                  DateTime @default(now()) @db.Timestamp(6)
  updated_at                  DateTime @default(now()) @db.Timestamp(6)
  user_lead_assigned_toTouser user?    @relation("lead_assigned_toTouser", fields: [assigned_to], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_lead_created_byTouser  user?    @relation("lead_created_byTouser", fields: [created_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                       String      @unique @db.VarChar(255)
  firstName                   String?     @db.VarChar(255)
  lastName                    String?     @db.VarChar(255)
  roq_user_id                 String      @db.VarChar(255)
  tenant_id                   String      @db.VarChar(255)
  created_at                  DateTime    @default(now()) @db.Timestamp(6)
  updated_at                  DateTime    @default(now()) @db.Timestamp(6)
  company                     company[]
  complaint                   complaint[]
  lead_lead_assigned_toTouser lead[]      @relation("lead_assigned_toTouser")
  lead_lead_created_byTouser  lead[]      @relation("lead_created_byTouser")
}
